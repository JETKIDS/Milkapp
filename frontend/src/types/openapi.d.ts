/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/customers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List customers */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                id: number;
                                name: string;
                                address: string;
                                phone?: string;
                                /** Format: email */
                                email?: string;
                                deliveryCourseId?: number;
                                /** Format: date-time */
                                createdAt: string;
                                /** Format: date-time */
                                updatedAt: string;
                            }[];
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        /** Create customer */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        name: string;
                        address: string;
                        phone?: string;
                        /** Format: email */
                        email?: string;
                        deliveryCourseId?: number;
                    };
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                id: number;
                                name: string;
                                address: string;
                                phone?: string;
                                /** Format: email */
                                email?: string;
                                deliveryCourseId?: number;
                                /** Format: date-time */
                                createdAt: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            message?: string;
                        };
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: false;
                            error: {
                                code: string;
                                message: string;
                                details?: unknown;
                            };
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/manufacturers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List manufacturers */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                id: number;
                                name: string;
                                contactInfo?: string;
                                /** Format: date-time */
                                createdAt: string;
                                /** Format: date-time */
                                updatedAt: string;
                            }[];
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        /** Create manufacturer */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        name: string;
                        contactInfo?: string;
                    };
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                id: number;
                                name: string;
                                contactInfo?: string;
                                /** Format: date-time */
                                createdAt: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            message?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/manufacturers/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update manufacturer */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        name?: string;
                        contactInfo?: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                id: number;
                                name: string;
                                contactInfo?: string;
                                /** Format: date-time */
                                createdAt: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            message?: string;
                        };
                    };
                };
            };
        };
        post?: never;
        /** Delete manufacturer */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/products": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List products */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                id: number;
                                name: string;
                                manufacturerId: number;
                                price: number;
                                unit: string;
                                description?: string;
                                stock: number;
                                /** Format: date-time */
                                createdAt: string;
                                /** Format: date-time */
                                updatedAt: string;
                            }[];
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        /** Create product */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        name: string;
                        manufacturerId: number;
                        price: number;
                        unit: string;
                        description?: string;
                    };
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                id: number;
                                name: string;
                                manufacturerId: number;
                                price: number;
                                unit: string;
                                description?: string;
                                stock: number;
                                /** Format: date-time */
                                createdAt: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            message?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/products/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update product */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        name?: string;
                        manufacturerId?: number;
                        price?: number;
                        unit?: string;
                        description?: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                id: number;
                                name: string;
                                manufacturerId: number;
                                price: number;
                                unit: string;
                                description?: string;
                                stock: number;
                                /** Format: date-time */
                                createdAt: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            message?: string;
                        };
                    };
                };
            };
        };
        post?: never;
        /** Delete product */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/delivery-courses": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List delivery courses */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                id: number;
                                name: string;
                                description?: string;
                                /** Format: date-time */
                                createdAt: string;
                                /** Format: date-time */
                                updatedAt: string;
                            }[];
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        /** Create delivery course */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        name: string;
                        description?: string;
                    };
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                id: number;
                                name: string;
                                description?: string;
                                /** Format: date-time */
                                createdAt: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            message?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/delivery-courses/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update delivery course */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        name?: string;
                        description?: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                id: number;
                                name: string;
                                description?: string;
                                /** Format: date-time */
                                createdAt: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            message?: string;
                        };
                    };
                };
            };
        };
        post?: never;
        /** Delete delivery course */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/orders": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List orders */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                id: number;
                                customerId: number;
                                productId: number;
                                quantity: number;
                                unitPrice: number;
                                totalPrice: number;
                                /** Format: date-time */
                                orderDate: string;
                                /** Format: date-time */
                                deliveryDate?: string;
                                status: string;
                                /** Format: date-time */
                                createdAt: string;
                            }[];
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        /** Create order */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        customerId: number;
                        productId: number;
                        quantity: number;
                        unitPrice: number;
                        /** Format: date-time */
                        orderDate: string;
                        /** Format: date-time */
                        deliveryDate?: string;
                    };
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                id: number;
                                customerId: number;
                                productId: number;
                                quantity: number;
                                unitPrice: number;
                                totalPrice: number;
                                /** Format: date-time */
                                orderDate: string;
                                /** Format: date-time */
                                deliveryDate?: string;
                                status: string;
                                /** Format: date-time */
                                createdAt: string;
                            };
                            message?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/orders/by-customer/{customerId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List orders by customer and period */
        get: {
            parameters: {
                query?: {
                    from?: string;
                    to?: string;
                };
                header?: never;
                path: {
                    customerId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                id: number;
                                customerId: number;
                                productId: number;
                                quantity: number;
                                unitPrice: number;
                                totalPrice: number;
                                /** Format: date-time */
                                orderDate: string;
                                /** Format: date-time */
                                deliveryDate?: string;
                                status: string;
                                /** Format: date-time */
                                createdAt: string;
                            }[];
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/orders/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update order */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        customerId?: number;
                        productId?: number;
                        quantity?: number;
                        unitPrice?: number;
                        /** Format: date-time */
                        orderDate?: string;
                        /** Format: date-time */
                        deliveryDate?: string;
                        /** @enum {string} */
                        status?: "pending" | "completed" | "cancelled";
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                id: number;
                                customerId: number;
                                productId: number;
                                quantity: number;
                                unitPrice: number;
                                totalPrice: number;
                                /** Format: date-time */
                                orderDate: string;
                                /** Format: date-time */
                                deliveryDate?: string;
                                status: string;
                                /** Format: date-time */
                                createdAt: string;
                            };
                            message?: string;
                        };
                    };
                };
            };
        };
        post?: never;
        /** Delete order */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/schedules": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List schedules */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                id: number;
                                customerId: number;
                                dayOfWeek: number;
                                isActive: boolean;
                                /** Format: date-time */
                                createdAt: string;
                            }[];
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        /** Create schedule */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        customerId: number;
                        dayOfWeek: number;
                        isActive?: boolean;
                    };
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                id: number;
                                customerId: number;
                                dayOfWeek: number;
                                isActive: boolean;
                                /** Format: date-time */
                                createdAt: string;
                            };
                            message?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/schedules/by-day/{day}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List schedules by day of week */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    day: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                id: number;
                                customerId: number;
                                dayOfWeek: number;
                                isActive: boolean;
                                /** Format: date-time */
                                createdAt: string;
                            }[];
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/schedules/by-course/{courseId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List schedules by delivery course */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    courseId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                id: number;
                                customerId: number;
                                dayOfWeek: number;
                                isActive: boolean;
                                /** Format: date-time */
                                createdAt: string;
                            }[];
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/schedules/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update schedule */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        customerId?: number;
                        dayOfWeek?: number;
                        isActive?: boolean;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                id: number;
                                customerId: number;
                                dayOfWeek: number;
                                isActive: boolean;
                                /** Format: date-time */
                                createdAt: string;
                            };
                            message?: string;
                        };
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/schedules/complete/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Complete schedule for a date */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        /** Format: date-time */
                        date?: string;
                    };
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                id: number;
                                orderId?: number;
                                customerId: number;
                                /** Format: date-time */
                                deliveryDate: string;
                                status: string;
                                notes?: string;
                                /** Format: date-time */
                                createdAt: string;
                            };
                            message?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/schedules/history/by-customer/{customerId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Delivery history by customer */
        get: {
            parameters: {
                query?: {
                    from?: string;
                    to?: string;
                };
                header?: never;
                path: {
                    customerId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                id: number;
                                orderId?: number;
                                customerId: number;
                                /** Format: date-time */
                                deliveryDate: string;
                                status: string;
                                notes?: string;
                                /** Format: date-time */
                                createdAt: string;
                            }[];
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/customers/{id}/contracts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List contracts by customer */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                id: number;
                                customerId: number;
                                productId: number;
                                isActive: boolean;
                                /** Format: date-time */
                                startDate: string;
                                /** Format: date-time */
                                endDate?: string;
                                /** Format: date-time */
                                createdAt: string;
                                /** Format: date-time */
                                updatedAt: string;
                            }[];
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        /** Create contract for customer */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        customerId: number;
                        productId: number;
                        isActive?: boolean;
                        /** Format: date-time */
                        startDate: string;
                        /** Format: date-time */
                        endDate?: string;
                    };
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                id: number;
                                customerId: number;
                                productId: number;
                                isActive: boolean;
                                /** Format: date-time */
                                startDate: string;
                                /** Format: date-time */
                                endDate?: string;
                                /** Format: date-time */
                                createdAt: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            message?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/customers/{id}/contracts/{contractId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update contract */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                    contractId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        customerId?: number;
                        productId?: number;
                        isActive?: boolean;
                        /** Format: date-time */
                        startDate?: string;
                        /** Format: date-time */
                        endDate?: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                id: number;
                                customerId: number;
                                productId: number;
                                isActive: boolean;
                                /** Format: date-time */
                                startDate: string;
                                /** Format: date-time */
                                endDate?: string;
                                /** Format: date-time */
                                createdAt: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            message?: string;
                        };
                    };
                };
            };
        };
        post?: never;
        /** Delete contract */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                    contractId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/customers/{id}/delivery-patterns/{contractId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List patterns for contract */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                    contractId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                id: number;
                                contractId: number;
                                dayOfWeek: number;
                                quantity: number;
                                isActive: boolean;
                                /** Format: date-time */
                                createdAt: string;
                                /** Format: date-time */
                                updatedAt: string;
                            }[];
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/customers/{id}/delivery-patterns": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create delivery pattern */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        contractId: number;
                        dayOfWeek: number;
                        quantity: number;
                        isActive?: boolean;
                    };
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                id: number;
                                contractId: number;
                                dayOfWeek: number;
                                quantity: number;
                                isActive: boolean;
                                /** Format: date-time */
                                createdAt: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            message?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/customers/{id}/delivery-patterns/{patternId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update delivery pattern */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                    patternId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        contractId?: number;
                        dayOfWeek?: number;
                        quantity?: number;
                        isActive?: boolean;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                id: number;
                                contractId: number;
                                dayOfWeek: number;
                                quantity: number;
                                isActive: boolean;
                                /** Format: date-time */
                                createdAt: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            message?: string;
                        };
                    };
                };
            };
        };
        post?: never;
        /** Delete delivery pattern */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                    patternId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/customers/{id}/detail": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Customer detail aggregate */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data?: unknown;
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/customers/{id}/delivery-schedule": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Customer delivery schedule */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data?: unknown;
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/customers/{id}/monthly-calendar/{year}/{month}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Customer monthly calendar */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                    year: string;
                    month: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data?: unknown;
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/customers/{id}/monthly-billing/{year}/{month}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Customer monthly billing */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                    year: string;
                    month: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data?: unknown;
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/customers/{id}/course-position": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get course position */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                id: number;
                                customerId: number;
                                deliveryCourseId: number;
                                position: number;
                                /** Format: date-time */
                                createdAt: string;
                                /** Format: date-time */
                                updatedAt: string;
                            } | null;
                            message?: string;
                        };
                    };
                };
            };
        };
        /** Set course position */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        courseId: number;
                        position: number;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                id: number;
                                customerId: number;
                                deliveryCourseId: number;
                                position: number;
                                /** Format: date-time */
                                createdAt: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            message?: string;
                        };
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/reports/delivery-list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Generate delivery list PDF */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        /** Format: date-time */
                        startDate?: string;
                        /** Format: date-time */
                        endDate?: string;
                        courseId?: number;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/pdf": unknown;
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/reports/product-list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Generate product list PDF */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        /** Format: date-time */
                        startDate?: string;
                        /** Format: date-time */
                        endDate?: string;
                        courseId?: number;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/pdf": unknown;
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/reports/invoice/{customerId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Generate invoice PDF */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    customerId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        customerId: number;
                        /** Format: date-time */
                        startDate: string;
                        /** Format: date-time */
                        endDate: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/pdf": unknown;
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/dashboard/today": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Today overview */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data?: unknown;
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/dashboard/pending-deliveries": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Pending deliveries */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data?: unknown;
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/dashboard/delivery-status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Delivery status by course/day */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data?: unknown;
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/dashboard/monthly-summary": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Monthly sales summary */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data?: unknown;
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/customers/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update customer */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        name?: string;
                        address?: string;
                        phone?: string;
                        /** Format: email */
                        email?: string;
                        deliveryCourseId?: number;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                id: number;
                                name: string;
                                address: string;
                                phone?: string;
                                /** Format: email */
                                email?: string;
                                deliveryCourseId?: number;
                                /** Format: date-time */
                                createdAt: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            message?: string;
                        };
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: false;
                            error: {
                                code: string;
                                message: string;
                                details?: unknown;
                            };
                        };
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: false;
                            error: {
                                code: string;
                                message: string;
                                details?: unknown;
                            };
                        };
                    };
                };
            };
        };
        post?: never;
        /** Delete customer */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/reports/invoice-history/{customerId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get invoice history */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    customerId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                id: number;
                                customerId: number;
                                /** Format: date-time */
                                invoicePeriodStart: string;
                                /** Format: date-time */
                                invoicePeriodEnd: string;
                                totalAmount: number;
                                /** Format: date-time */
                                issuedDate: string;
                                /** Format: date-time */
                                createdAt: string;
                            }[];
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        CustomerCreate: {
            name: string;
            address: string;
            phone?: string;
            /** Format: email */
            email?: string;
            deliveryCourseId?: number;
        };
        CustomerUpdate: {
            name?: string;
            address?: string;
            phone?: string;
            /** Format: email */
            email?: string;
            deliveryCourseId?: number;
        };
        Customer: {
            id: number;
            name: string;
            address: string;
            phone?: string;
            /** Format: email */
            email?: string;
            deliveryCourseId?: number;
            /** Format: date-time */
            createdAt: string;
            /** Format: date-time */
            updatedAt: string;
        };
        Manufacturer: {
            id: number;
            name: string;
            contactInfo?: string;
            /** Format: date-time */
            createdAt: string;
            /** Format: date-time */
            updatedAt: string;
        };
        ManufacturerCreate: {
            name: string;
            contactInfo?: string;
        };
        ManufacturerUpdate: {
            name?: string;
            contactInfo?: string;
        };
        Product: {
            id: number;
            name: string;
            manufacturerId: number;
            price: number;
            unit: string;
            description?: string;
            stock: number;
            /** Format: date-time */
            createdAt: string;
            /** Format: date-time */
            updatedAt: string;
        };
        ProductCreate: {
            name: string;
            manufacturerId: number;
            price: number;
            unit: string;
            description?: string;
        };
        ProductUpdate: {
            name?: string;
            manufacturerId?: number;
            price?: number;
            unit?: string;
            description?: string;
        };
        DeliveryCourse: {
            id: number;
            name: string;
            description?: string;
            /** Format: date-time */
            createdAt: string;
            /** Format: date-time */
            updatedAt: string;
        };
        DeliveryCourseCreate: {
            name: string;
            description?: string;
        };
        DeliveryCourseUpdate: {
            name?: string;
            description?: string;
        };
        Order: {
            id: number;
            customerId: number;
            productId: number;
            quantity: number;
            unitPrice: number;
            totalPrice: number;
            /** Format: date-time */
            orderDate: string;
            /** Format: date-time */
            deliveryDate?: string;
            status: string;
            /** Format: date-time */
            createdAt: string;
        };
        ScheduleCreate: {
            customerId: number;
            dayOfWeek: number;
            isActive?: boolean;
        };
        ScheduleUpdate: {
            customerId?: number;
            dayOfWeek?: number;
            isActive?: boolean;
        };
        DeliverySchedule: {
            id: number;
            customerId: number;
            dayOfWeek: number;
            isActive: boolean;
            /** Format: date-time */
            createdAt: string;
        };
        DeliveryRecord: {
            id: number;
            orderId?: number;
            customerId: number;
            /** Format: date-time */
            deliveryDate: string;
            status: string;
            notes?: string;
            /** Format: date-time */
            createdAt: string;
        };
        OrderCreate: {
            customerId: number;
            productId: number;
            quantity: number;
            unitPrice: number;
            /** Format: date-time */
            orderDate: string;
            /** Format: date-time */
            deliveryDate?: string;
        };
        OrderUpdate: {
            customerId?: number;
            productId?: number;
            quantity?: number;
            unitPrice?: number;
            /** Format: date-time */
            orderDate?: string;
            /** Format: date-time */
            deliveryDate?: string;
            /** @enum {string} */
            status?: "pending" | "completed" | "cancelled";
        };
        CustomerProductContract: {
            id: number;
            customerId: number;
            productId: number;
            isActive: boolean;
            /** Format: date-time */
            startDate: string;
            /** Format: date-time */
            endDate?: string;
            /** Format: date-time */
            createdAt: string;
            /** Format: date-time */
            updatedAt: string;
        };
        ContractCreate: {
            customerId: number;
            productId: number;
            isActive?: boolean;
            /** Format: date-time */
            startDate: string;
            /** Format: date-time */
            endDate?: string;
        };
        ContractUpdate: {
            customerId?: number;
            productId?: number;
            isActive?: boolean;
            /** Format: date-time */
            startDate?: string;
            /** Format: date-time */
            endDate?: string;
        };
        DeliveryPattern: {
            id: number;
            contractId: number;
            dayOfWeek: number;
            quantity: number;
            isActive: boolean;
            /** Format: date-time */
            createdAt: string;
            /** Format: date-time */
            updatedAt: string;
        };
        PatternCreate: {
            contractId: number;
            dayOfWeek: number;
            quantity: number;
            isActive?: boolean;
        };
        PatternUpdate: {
            contractId?: number;
            dayOfWeek?: number;
            quantity?: number;
            isActive?: boolean;
        };
        CustomerCoursePosition: {
            id: number;
            customerId: number;
            deliveryCourseId: number;
            position: number;
            /** Format: date-time */
            createdAt: string;
            /** Format: date-time */
            updatedAt: string;
        };
        ReportFilter: {
            /** Format: date-time */
            startDate?: string;
            /** Format: date-time */
            endDate?: string;
            courseId?: number;
        };
        InvoiceInput: {
            customerId: number;
            /** Format: date-time */
            startDate: string;
            /** Format: date-time */
            endDate: string;
        };
        InvoiceHistory: {
            id: number;
            customerId: number;
            /** Format: date-time */
            invoicePeriodStart: string;
            /** Format: date-time */
            invoicePeriodEnd: string;
            totalAmount: number;
            /** Format: date-time */
            issuedDate: string;
            /** Format: date-time */
            createdAt: string;
        };
        SuccessResponse: {
            /** @enum {boolean} */
            success: true;
            data?: unknown;
            message?: string;
        };
        ErrorResponse: {
            /** @enum {boolean} */
            success: false;
            error: {
                code: string;
                message: string;
                details?: unknown;
            };
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
